var search_data = {"index":{"searchIndex":["flickraw","flickr","activity","auth","oauth","blogs","cameras","collections","commons","contacts","favorites","galleries","groups","discuss","replies","topics","members","pools","interestingness","machinetags","panda","people","photos","comments","geo","licenses","notes","people","suggestions","transform","upload","photosets","comments","places","prefs","push","reflection","stats","tags","test","urls","object","activity()","add()","add()","add()","add()","add()","add()","addcomment()","addcomment()","addphoto()","addphoto()","addtags()","approvesuggestion()","auth()","batchcorrectlocation()","blogs()","browse()","cameras()","checktickets()","checktoken()","checktoken()","collections()","comments()","comments()","commons()","contacts()","correctlocation()","create()","create()","delete()","delete()","delete()","delete()","delete()","deletecomment()","deletecomment()","deletecoords()","discuss()","echo()","edit()","edit()","editcomment()","editcomment()","editcoords()","editmeta()","editmeta()","editphoto()","editphotos()","editphotos()","favorites()","find()","findbyemail()","findbylatlon()","findbyusername()","flickr()","galleries()","geo()","getaccesstoken()","getallcontexts()","getbrandmodels()","getbrands()","getcsvfiles()","getchildrenwithphotospublic()","getclusterphotos()","getclusters()","getcollectiondomains()","getcollectionreferrers()","getcollectionstats()","getcontactsphotos()","getcontactspublicphotos()","getcontenttype()","getcontext()","getcontext()","getcontext()","getcontext()","getcounts()","getexif()","getfavorites()","getfrob()","getfulltoken()","getgeoperms()","getgroup()","getgroups()","getgroups()","gethidden()","gethotlist()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfo()","getinfobyurl()","getinstitutions()","getlimits()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlist()","getlistforphoto()","getlistphoto()","getlistrecentlyuploaded()","getlistuser()","getlistuserpopular()","getlistuserraw()","getlocation()","getmethodinfo()","getmethods()","getmostfrequentlyused()","getnamespaces()","getnotinset()","getpairs()","getperms()","getperms()","getphotodomains()","getphotoreferrers()","getphotostats()","getphotos()","getphotos()","getphotos()","getphotos()","getphotos()","getphotosof()","getphotosetdomains()","getphotosetreferrers()","getphotosetstats()","getphotostreamdomains()","getphotostreamreferrers()","getphotostreamstats()","getplacetypes()","getpopularphotos()","getpredicates()","getprivacy()","getpublicgroups()","getpubliclist()","getpubliclist()","getpublicphotos()","getrecent()","getrecentforcontacts()","getrecentvalues()","getrelated()","getsafetylevel()","getservices()","getshapehistory()","getsizes()","getsubscriptions()","gettaggingsuggestions()","gettoken()","gettopplaceslist()","gettopics()","gettotalviews()","gettree()","getuntagged()","getuploadstatus()","getuserphotos()","getuserprofile()","getvalues()","getwithgeodata()","getwithoutgeodata()","groups()","interestingness()","join()","joinrequest()","leave()","licenses()","login()","lookupgallery()","lookupgroup()","lookupuser()","machinetags()","members()","notes()","null()","oauth()","ordersets()","panda()","people()","people()","photos()","photosforlocation()","photosets()","places()","placesforboundingbox()","placesforcontacts()","placesfortags()","placesforuser()","pools()","postphoto()","prefs()","push()","recentlyupdated()","reflection()","rejectsuggestion()","remove()","remove()","removelocation()","removephoto()","removephotos()","removesuggestion()","removetag()","reorderphotos()","replies()","resolveplaceid()","resolveplaceurl()","rotate()","search()","search()","setcontenttype()","setcontext()","setdates()","setlicense()","setlocation()","setmeta()","setperms()","setperms()","setprimaryphoto()","setsafetylevel()","settags()","stats()","subscribe()","suggestlocation()","suggestions()","tags()","tagsforplace()","test()","topics()","transform()","unsubscribe()","upload()","urls()","usercomments()","userphotos()","readme"],"longSearchIndex":["flickraw","flickraw::flickr","flickraw::flickr::activity","flickraw::flickr::auth","flickraw::flickr::auth::oauth","flickraw::flickr::blogs","flickraw::flickr::cameras","flickraw::flickr::collections","flickraw::flickr::commons","flickraw::flickr::contacts","flickraw::flickr::favorites","flickraw::flickr::galleries","flickraw::flickr::groups","flickraw::flickr::groups::discuss","flickraw::flickr::groups::discuss::replies","flickraw::flickr::groups::discuss::topics","flickraw::flickr::groups::members","flickraw::flickr::groups::pools","flickraw::flickr::interestingness","flickraw::flickr::machinetags","flickraw::flickr::panda","flickraw::flickr::people","flickraw::flickr::photos","flickraw::flickr::photos::comments","flickraw::flickr::photos::geo","flickraw::flickr::photos::licenses","flickraw::flickr::photos::notes","flickraw::flickr::photos::people","flickraw::flickr::photos::suggestions","flickraw::flickr::photos::transform","flickraw::flickr::photos::upload","flickraw::flickr::photosets","flickraw::flickr::photosets::comments","flickraw::flickr::places","flickraw::flickr::prefs","flickraw::flickr::push","flickraw::flickr::reflection","flickraw::flickr::stats","flickraw::flickr::tags","flickraw::flickr::test","flickraw::flickr::urls","object","flickraw::flickr#activity()","flickraw::flickr::favorites#add()","flickraw::flickr::groups::discuss::replies#add()","flickraw::flickr::groups::discuss::topics#add()","flickraw::flickr::groups::pools#add()","flickraw::flickr::photos::notes#add()","flickraw::flickr::photos::people#add()","flickraw::flickr::photos::comments#addcomment()","flickraw::flickr::photosets::comments#addcomment()","flickraw::flickr::galleries#addphoto()","flickraw::flickr::photosets#addphoto()","flickraw::flickr::photos#addtags()","flickraw::flickr::photos::suggestions#approvesuggestion()","flickraw::flickr#auth()","flickraw::flickr::photos::geo#batchcorrectlocation()","flickraw::flickr#blogs()","flickraw::flickr::groups#browse()","flickraw::flickr#cameras()","flickraw::flickr::photos::upload#checktickets()","flickraw::flickr::auth#checktoken()","flickraw::flickr::auth::oauth#checktoken()","flickraw::flickr#collections()","flickraw::flickr::photos#comments()","flickraw::flickr::photosets#comments()","flickraw::flickr#commons()","flickraw::flickr#contacts()","flickraw::flickr::photos::geo#correctlocation()","flickraw::flickr::galleries#create()","flickraw::flickr::photosets#create()","flickraw::flickr::groups::discuss::replies#delete()","flickraw::flickr::photos#delete()","flickraw::flickr::photos::notes#delete()","flickraw::flickr::photos::people#delete()","flickraw::flickr::photosets#delete()","flickraw::flickr::photos::comments#deletecomment()","flickraw::flickr::photosets::comments#deletecomment()","flickraw::flickr::photos::people#deletecoords()","flickraw::flickr::groups#discuss()","flickraw::flickr::test#echo()","flickraw::flickr::groups::discuss::replies#edit()","flickraw::flickr::photos::notes#edit()","flickraw::flickr::photos::comments#editcomment()","flickraw::flickr::photosets::comments#editcomment()","flickraw::flickr::photos::people#editcoords()","flickraw::flickr::galleries#editmeta()","flickraw::flickr::photosets#editmeta()","flickraw::flickr::galleries#editphoto()","flickraw::flickr::galleries#editphotos()","flickraw::flickr::photosets#editphotos()","flickraw::flickr#favorites()","flickraw::flickr::places#find()","flickraw::flickr::people#findbyemail()","flickraw::flickr::places#findbylatlon()","flickraw::flickr::people#findbyusername()","object#flickr()","flickraw::flickr#galleries()","flickraw::flickr::photos#geo()","flickraw::flickr::auth::oauth#getaccesstoken()","flickraw::flickr::photos#getallcontexts()","flickraw::flickr::cameras#getbrandmodels()","flickraw::flickr::cameras#getbrands()","flickraw::flickr::stats#getcsvfiles()","flickraw::flickr::places#getchildrenwithphotospublic()","flickraw::flickr::tags#getclusterphotos()","flickraw::flickr::tags#getclusters()","flickraw::flickr::stats#getcollectiondomains()","flickraw::flickr::stats#getcollectionreferrers()","flickraw::flickr::stats#getcollectionstats()","flickraw::flickr::photos#getcontactsphotos()","flickraw::flickr::photos#getcontactspublicphotos()","flickraw::flickr::prefs#getcontenttype()","flickraw::flickr::favorites#getcontext()","flickraw::flickr::groups::pools#getcontext()","flickraw::flickr::photos#getcontext()","flickraw::flickr::photosets#getcontext()","flickraw::flickr::photos#getcounts()","flickraw::flickr::photos#getexif()","flickraw::flickr::photos#getfavorites()","flickraw::flickr::auth#getfrob()","flickraw::flickr::auth#getfulltoken()","flickraw::flickr::prefs#getgeoperms()","flickraw::flickr::urls#getgroup()","flickraw::flickr::groups::pools#getgroups()","flickraw::flickr::people#getgroups()","flickraw::flickr::prefs#gethidden()","flickraw::flickr::tags#gethotlist()","flickraw::flickr::collections#getinfo()","flickraw::flickr::galleries#getinfo()","flickraw::flickr::groups#getinfo()","flickraw::flickr::groups::discuss::replies#getinfo()","flickraw::flickr::groups::discuss::topics#getinfo()","flickraw::flickr::people#getinfo()","flickraw::flickr::photos#getinfo()","flickraw::flickr::photos::licenses#getinfo()","flickraw::flickr::photosets#getinfo()","flickraw::flickr::places#getinfo()","flickraw::flickr::places#getinfobyurl()","flickraw::flickr::commons#getinstitutions()","flickraw::flickr::people#getlimits()","flickraw::flickr::blogs#getlist()","flickraw::flickr::contacts#getlist()","flickraw::flickr::favorites#getlist()","flickraw::flickr::galleries#getlist()","flickraw::flickr::groups::discuss::replies#getlist()","flickraw::flickr::groups::discuss::topics#getlist()","flickraw::flickr::groups::members#getlist()","flickraw::flickr::interestingness#getlist()","flickraw::flickr::panda#getlist()","flickraw::flickr::photos::comments#getlist()","flickraw::flickr::photos::people#getlist()","flickraw::flickr::photos::suggestions#getlist()","flickraw::flickr::photosets#getlist()","flickraw::flickr::photosets::comments#getlist()","flickraw::flickr::galleries#getlistforphoto()","flickraw::flickr::tags#getlistphoto()","flickraw::flickr::contacts#getlistrecentlyuploaded()","flickraw::flickr::tags#getlistuser()","flickraw::flickr::tags#getlistuserpopular()","flickraw::flickr::tags#getlistuserraw()","flickraw::flickr::photos::geo#getlocation()","flickraw::flickr::reflection#getmethodinfo()","flickraw::flickr::reflection#getmethods()","flickraw::flickr::tags#getmostfrequentlyused()","flickraw::flickr::machinetags#getnamespaces()","flickraw::flickr::photos#getnotinset()","flickraw::flickr::machinetags#getpairs()","flickraw::flickr::photos#getperms()","flickraw::flickr::photos::geo#getperms()","flickraw::flickr::stats#getphotodomains()","flickraw::flickr::stats#getphotoreferrers()","flickraw::flickr::stats#getphotostats()","flickraw::flickr::galleries#getphotos()","flickraw::flickr::groups::pools#getphotos()","flickraw::flickr::panda#getphotos()","flickraw::flickr::people#getphotos()","flickraw::flickr::photosets#getphotos()","flickraw::flickr::people#getphotosof()","flickraw::flickr::stats#getphotosetdomains()","flickraw::flickr::stats#getphotosetreferrers()","flickraw::flickr::stats#getphotosetstats()","flickraw::flickr::stats#getphotostreamdomains()","flickraw::flickr::stats#getphotostreamreferrers()","flickraw::flickr::stats#getphotostreamstats()","flickraw::flickr::places#getplacetypes()","flickraw::flickr::stats#getpopularphotos()","flickraw::flickr::machinetags#getpredicates()","flickraw::flickr::prefs#getprivacy()","flickraw::flickr::people#getpublicgroups()","flickraw::flickr::contacts#getpubliclist()","flickraw::flickr::favorites#getpubliclist()","flickraw::flickr::people#getpublicphotos()","flickraw::flickr::photos#getrecent()","flickraw::flickr::photos::comments#getrecentforcontacts()","flickraw::flickr::machinetags#getrecentvalues()","flickraw::flickr::tags#getrelated()","flickraw::flickr::prefs#getsafetylevel()","flickraw::flickr::blogs#getservices()","flickraw::flickr::places#getshapehistory()","flickraw::flickr::photos#getsizes()","flickraw::flickr::push#getsubscriptions()","flickraw::flickr::contacts#gettaggingsuggestions()","flickraw::flickr::auth#gettoken()","flickraw::flickr::places#gettopplaceslist()","flickraw::flickr::push#gettopics()","flickraw::flickr::stats#gettotalviews()","flickraw::flickr::collections#gettree()","flickraw::flickr::photos#getuntagged()","flickraw::flickr::people#getuploadstatus()","flickraw::flickr::urls#getuserphotos()","flickraw::flickr::urls#getuserprofile()","flickraw::flickr::machinetags#getvalues()","flickraw::flickr::photos#getwithgeodata()","flickraw::flickr::photos#getwithoutgeodata()","flickraw::flickr#groups()","flickraw::flickr#interestingness()","flickraw::flickr::groups#join()","flickraw::flickr::groups#joinrequest()","flickraw::flickr::groups#leave()","flickraw::flickr::photos#licenses()","flickraw::flickr::test#login()","flickraw::flickr::urls#lookupgallery()","flickraw::flickr::urls#lookupgroup()","flickraw::flickr::urls#lookupuser()","flickraw::flickr#machinetags()","flickraw::flickr::groups#members()","flickraw::flickr::photos#notes()","flickraw::flickr::test#null()","flickraw::flickr::auth#oauth()","flickraw::flickr::photosets#ordersets()","flickraw::flickr#panda()","flickraw::flickr#people()","flickraw::flickr::photos#people()","flickraw::flickr#photos()","flickraw::flickr::photos::geo#photosforlocation()","flickraw::flickr#photosets()","flickraw::flickr#places()","flickraw::flickr::places#placesforboundingbox()","flickraw::flickr::places#placesforcontacts()","flickraw::flickr::places#placesfortags()","flickraw::flickr::places#placesforuser()","flickraw::flickr::groups#pools()","flickraw::flickr::blogs#postphoto()","flickraw::flickr#prefs()","flickraw::flickr#push()","flickraw::flickr::photos#recentlyupdated()","flickraw::flickr#reflection()","flickraw::flickr::photos::suggestions#rejectsuggestion()","flickraw::flickr::favorites#remove()","flickraw::flickr::groups::pools#remove()","flickraw::flickr::photos::geo#removelocation()","flickraw::flickr::photosets#removephoto()","flickraw::flickr::photosets#removephotos()","flickraw::flickr::photos::suggestions#removesuggestion()","flickraw::flickr::photos#removetag()","flickraw::flickr::photosets#reorderphotos()","flickraw::flickr::groups::discuss#replies()","flickraw::flickr::places#resolveplaceid()","flickraw::flickr::places#resolveplaceurl()","flickraw::flickr::photos::transform#rotate()","flickraw::flickr::groups#search()","flickraw::flickr::photos#search()","flickraw::flickr::photos#setcontenttype()","flickraw::flickr::photos::geo#setcontext()","flickraw::flickr::photos#setdates()","flickraw::flickr::photos::licenses#setlicense()","flickraw::flickr::photos::geo#setlocation()","flickraw::flickr::photos#setmeta()","flickraw::flickr::photos#setperms()","flickraw::flickr::photos::geo#setperms()","flickraw::flickr::photosets#setprimaryphoto()","flickraw::flickr::photos#setsafetylevel()","flickraw::flickr::photos#settags()","flickraw::flickr#stats()","flickraw::flickr::push#subscribe()","flickraw::flickr::photos::suggestions#suggestlocation()","flickraw::flickr::photos#suggestions()","flickraw::flickr#tags()","flickraw::flickr::places#tagsforplace()","flickraw::flickr#test()","flickraw::flickr::groups::discuss#topics()","flickraw::flickr::photos#transform()","flickraw::flickr::push#unsubscribe()","flickraw::flickr::photos#upload()","flickraw::flickr#urls()","flickraw::flickr::activity#usercomments()","flickraw::flickr::activity#userphotos()",""],"info":[["FlickRaw","","FlickRaw.html","",""],["FlickRaw::Flickr","","FlickRaw/Flickr.html","",""],["FlickRaw::Flickr::Activity","","FlickRaw/Flickr/Activity.html","",""],["FlickRaw::Flickr::Auth","","FlickRaw/Flickr/Auth.html","",""],["FlickRaw::Flickr::Auth::Oauth","","FlickRaw/Flickr/Auth/Oauth.html","",""],["FlickRaw::Flickr::Blogs","","FlickRaw/Flickr/Blogs.html","",""],["FlickRaw::Flickr::Cameras","","FlickRaw/Flickr/Cameras.html","",""],["FlickRaw::Flickr::Collections","","FlickRaw/Flickr/Collections.html","",""],["FlickRaw::Flickr::Commons","","FlickRaw/Flickr/Commons.html","",""],["FlickRaw::Flickr::Contacts","","FlickRaw/Flickr/Contacts.html","",""],["FlickRaw::Flickr::Favorites","","FlickRaw/Flickr/Favorites.html","",""],["FlickRaw::Flickr::Galleries","","FlickRaw/Flickr/Galleries.html","",""],["FlickRaw::Flickr::Groups","","FlickRaw/Flickr/Groups.html","",""],["FlickRaw::Flickr::Groups::Discuss","","FlickRaw/Flickr/Groups/Discuss.html","",""],["FlickRaw::Flickr::Groups::Discuss::Replies","","FlickRaw/Flickr/Groups/Discuss/Replies.html","",""],["FlickRaw::Flickr::Groups::Discuss::Topics","","FlickRaw/Flickr/Groups/Discuss/Topics.html","",""],["FlickRaw::Flickr::Groups::Members","","FlickRaw/Flickr/Groups/Members.html","",""],["FlickRaw::Flickr::Groups::Pools","","FlickRaw/Flickr/Groups/Pools.html","",""],["FlickRaw::Flickr::Interestingness","","FlickRaw/Flickr/Interestingness.html","",""],["FlickRaw::Flickr::Machinetags","","FlickRaw/Flickr/Machinetags.html","",""],["FlickRaw::Flickr::Panda","","FlickRaw/Flickr/Panda.html","",""],["FlickRaw::Flickr::People","","FlickRaw/Flickr/People.html","",""],["FlickRaw::Flickr::Photos","","FlickRaw/Flickr/Photos.html","",""],["FlickRaw::Flickr::Photos::Comments","","FlickRaw/Flickr/Photos/Comments.html","",""],["FlickRaw::Flickr::Photos::Geo","","FlickRaw/Flickr/Photos/Geo.html","",""],["FlickRaw::Flickr::Photos::Licenses","","FlickRaw/Flickr/Photos/Licenses.html","",""],["FlickRaw::Flickr::Photos::Notes","","FlickRaw/Flickr/Photos/Notes.html","",""],["FlickRaw::Flickr::Photos::People","","FlickRaw/Flickr/Photos/People.html","",""],["FlickRaw::Flickr::Photos::Suggestions","","FlickRaw/Flickr/Photos/Suggestions.html","",""],["FlickRaw::Flickr::Photos::Transform","","FlickRaw/Flickr/Photos/Transform.html","",""],["FlickRaw::Flickr::Photos::Upload","","FlickRaw/Flickr/Photos/Upload.html","",""],["FlickRaw::Flickr::Photosets","","FlickRaw/Flickr/Photosets.html","",""],["FlickRaw::Flickr::Photosets::Comments","","FlickRaw/Flickr/Photosets/Comments.html","",""],["FlickRaw::Flickr::Places","","FlickRaw/Flickr/Places.html","",""],["FlickRaw::Flickr::Prefs","","FlickRaw/Flickr/Prefs.html","",""],["FlickRaw::Flickr::Push","","FlickRaw/Flickr/Push.html","",""],["FlickRaw::Flickr::Reflection","","FlickRaw/Flickr/Reflection.html","",""],["FlickRaw::Flickr::Stats","","FlickRaw/Flickr/Stats.html","",""],["FlickRaw::Flickr::Tags","","FlickRaw/Flickr/Tags.html","",""],["FlickRaw::Flickr::Test","","FlickRaw/Flickr/Test.html","",""],["FlickRaw::Flickr::Urls","","FlickRaw/Flickr/Urls.html","",""],["Object","","Object.html","",""],["activity","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-activity","","<p>Returns a Activity object.\n"],["add","FlickRaw::Flickr::Favorites","FlickRaw/Flickr/Favorites.html#method-i-add","(:photo_id => 'photo_id')","<p>flickr.favorites.add request.\n<p>Adds a photo to a user&#39;s favorites list.\n<p><strong>Arguments</strong>\n"],["add","FlickRaw::Flickr::Groups::Discuss::Replies","FlickRaw/Flickr/Groups/Discuss/Replies.html#method-i-add","(:topic_id => 'topic_id',:message => 'message')","<p>flickr.groups.discuss.replies.add request.\n<p>Post a new reply to a group discussion topic.\n<p><strong>Arguments</strong>\n"],["add","FlickRaw::Flickr::Groups::Discuss::Topics","FlickRaw/Flickr/Groups/Discuss/Topics.html#method-i-add","(:group_id => 'group_id',:subject => 'subject',:message => 'message')","<p>flickr.groups.discuss.topics.add request.\n<p>Post a new discussion topic to a group.\n<p><strong>Arguments</strong>\n"],["add","FlickRaw::Flickr::Groups::Pools","FlickRaw/Flickr/Groups/Pools.html#method-i-add","(:photo_id => 'photo_id',:group_id => 'group_id')","<p>flickr.groups.pools.add request.\n<p>Add a photo to a group&#39;s pool.\n<p><strong>Arguments</strong>\n"],["add","FlickRaw::Flickr::Photos::Notes","FlickRaw/Flickr/Photos/Notes.html#method-i-add","(:photo_id => 'photo_id',:note_x => 'note_x',:note_y => 'note_y',:note_w => 'note_w',:note_h => 'note_h',:note_text => 'note_text')","<p>flickr.photos.notes.add request.\n<p>Add a note to a photo. Coordinates and sizes are in pixels, based on …\n"],["add","FlickRaw::Flickr::Photos::People","FlickRaw/Flickr/Photos/People.html#method-i-add","(:photo_id => 'photo_id',:user_id => 'user_id',:person_x => 'person_x',:person_y => 'person_y',:person_w => 'person_w',:person_h => 'person_h',:persons => 'persons')","<p>flickr.photos.people.add request.\n<p>Add a person to a photo. Coordinates and sizes of boxes are optional; …\n"],["addComment","FlickRaw::Flickr::Photos::Comments","FlickRaw/Flickr/Photos/Comments.html#method-i-addComment","(:photo_id => 'photo_id',:comment_text => 'comment_text',:secure_image_embeds => 'secure_image_embeds',:expand_bbml => 'expand_bbml',:bbml_need_all_photo_sizes => 'bbml_need_all_photo_sizes',:primary_photo_longest_dimension => 'primary_photo_longest_dimension')","<p>flickr.photos.comments.addComment request.\n<p>Add comment to a photo as the currently authenticated user. …\n"],["addComment","FlickRaw::Flickr::Photosets::Comments","FlickRaw/Flickr/Photosets/Comments.html#method-i-addComment","(:photoset_id => 'photoset_id',:comment_text => 'comment_text')","<p>flickr.photosets.comments.addComment request.\n<p>Add a comment to a photoset.\n<p><strong>Arguments</strong>\n"],["addPhoto","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-addPhoto","(:gallery_id => 'gallery_id',:photo_id => 'photo_id',:comment => 'comment')","<p>flickr.galleries.addPhoto request.\n<p>Add a photo to a gallery.\n<p><strong>Arguments</strong>\n"],["addPhoto","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-addPhoto","(:photoset_id => 'photoset_id',:photo_id => 'photo_id')","<p>flickr.photosets.addPhoto request.\n<p>Add a photo to the end of an existing photoset.\n<p><strong>Arguments</strong>\n"],["addTags","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-addTags","(:photo_id => 'photo_id',:tags => 'tags')","<p>flickr.photos.addTags request.\n<p>Add tags to a photo.\n<p><strong>Arguments</strong>\n"],["approveSuggestion","FlickRaw::Flickr::Photos::Suggestions","FlickRaw/Flickr/Photos/Suggestions.html#method-i-approveSuggestion","(:suggestion_id => 'suggestion_id')","<p>flickr.photos.suggestions.approveSuggestion request.\n<p>Approve a suggestion for a photo.\n<p><strong>Arguments</strong>\n"],["auth","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-auth","","<p>Returns a Auth object.\n"],["batchCorrectLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-batchCorrectLocation","(:lat => 'lat',:lon => 'lon',:accuracy => 'accuracy',:place_id => 'place_id',:woe_id => 'woe_id')","<p>flickr.photos.geo.batchCorrectLocation request.\n<p>Correct the places hierarchy for all the photos for a …\n"],["blogs","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-blogs","","<p>Returns a Blogs object.\n"],["browse","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-browse","(:cat_id => 'cat_id')","<p>flickr.groups.browse request.\n<p>Browse the group category tree, finding groups and sub-categories.\n<p><strong>Arguments</strong> …\n"],["cameras","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-cameras","","<p>Returns a Cameras object.\n"],["checkTickets","FlickRaw::Flickr::Photos::Upload","FlickRaw/Flickr/Photos/Upload.html#method-i-checkTickets","(:tickets => 'tickets',:batch_id => 'batch_id')","<p>flickr.photos.upload.checkTickets request.\n<p>Checks the status of one or more asynchronous photo upload …\n"],["checkToken","FlickRaw::Flickr::Auth","FlickRaw/Flickr/Auth.html#method-i-checkToken","(:auth_token => 'auth_token')","<p>flickr.auth.checkToken request.\n<p>Returns the credentials attached to an authentication token. This call …\n"],["checkToken","FlickRaw::Flickr::Auth::Oauth","FlickRaw/Flickr/Auth/Oauth.html#method-i-checkToken","(:oauth_token => 'oauth_token')","<p>flickr.auth.oauth.checkToken request.\n<p>Returns the credentials attached to an OAuth authentication token. …\n"],["collections","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-collections","","<p>Returns a Collections object.\n"],["comments","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-comments","","<p>Returns a Comments object.\n"],["comments","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-comments","","<p>Returns a Comments object.\n"],["commons","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-commons","","<p>Returns a Commons object.\n"],["contacts","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-contacts","","<p>Returns a Contacts object.\n"],["correctLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-correctLocation","(:photo_id => 'photo_id',:place_id => 'place_id',:woe_id => 'woe_id',:foursquare_id => 'foursquare_id')","<p>flickr.photos.geo.correctLocation request.\n<p><strong>Arguments</strong>\n<p>photo_id <em>(required)</em>  &mdash; The ID of the photo whose WOE …\n"],["create","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-create","(:title => 'title',:description => 'description',:primary_photo_id => 'primary_photo_id',:full_result => 'full_result')","<p>flickr.galleries.create request.\n<p>Create a new gallery for the calling user.\n<p><strong>Arguments</strong>\n"],["create","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-create","(:title => 'title',:description => 'description',:primary_photo_id => 'primary_photo_id',:full_result => 'full_result')","<p>flickr.photosets.create request.\n<p>Create a new photoset for the calling user.\n<p><strong>Arguments</strong>\n"],["delete","FlickRaw::Flickr::Groups::Discuss::Replies","FlickRaw/Flickr/Groups/Discuss/Replies.html#method-i-delete","(:topic_id => 'topic_id',:reply_id => 'reply_id')","<p>flickr.groups.discuss.replies.delete request.\n<p>Delete a reply from a group topic.\n<p><strong>Arguments</strong>\n"],["delete","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-delete","(:photo_id => 'photo_id')","<p>flickr.photos.delete request.\n<p>Delete a photo from flickr.\n<p><strong>Arguments</strong>\n"],["delete","FlickRaw::Flickr::Photos::Notes","FlickRaw/Flickr/Photos/Notes.html#method-i-delete","(:note_id => 'note_id')","<p>flickr.photos.notes.delete request.\n<p>Delete a note from a photo.\n<p><strong>Arguments</strong>\n"],["delete","FlickRaw::Flickr::Photos::People","FlickRaw/Flickr/Photos/People.html#method-i-delete","(:photo_id => 'photo_id',:user_id => 'user_id',:email => 'email')","<p>flickr.photos.people.delete request.\n<p>Remove a person from a photo.\n<p><strong>Arguments</strong>\n"],["delete","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-delete","(:photoset_id => 'photoset_id')","<p>flickr.photosets.delete request.\n<p>Delete a photoset.\n<p><strong>Arguments</strong>\n"],["deleteComment","FlickRaw::Flickr::Photos::Comments","FlickRaw/Flickr/Photos/Comments.html#method-i-deleteComment","(:comment_id => 'comment_id')","<p>flickr.photos.comments.deleteComment request.\n<p>Delete a comment as the currently authenticated user.\n<p><strong>Arguments</strong> …\n"],["deleteComment","FlickRaw::Flickr::Photosets::Comments","FlickRaw/Flickr/Photosets/Comments.html#method-i-deleteComment","(:comment_id => 'comment_id')","<p>flickr.photosets.comments.deleteComment request.\n<p>Delete a photoset comment as the currently authenticated …\n"],["deleteCoords","FlickRaw::Flickr::Photos::People","FlickRaw/Flickr/Photos/People.html#method-i-deleteCoords","(:photo_id => 'photo_id',:user_id => 'user_id')","<p>flickr.photos.people.deleteCoords request.\n<p>Remove the bounding box from a person in a photo\n<p><strong>Arguments</strong>\n"],["discuss","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-discuss","","<p>Returns a Discuss object.\n"],["echo","FlickRaw::Flickr::Test","FlickRaw/Flickr/Test.html#method-i-echo","","<p>flickr.test.echo request.\n<p>A testing method which echo&#39;s all parameters back in the response.\n<p><strong>Arguments</strong> …\n"],["edit","FlickRaw::Flickr::Groups::Discuss::Replies","FlickRaw/Flickr/Groups/Discuss/Replies.html#method-i-edit","(:topic_id => 'topic_id',:reply_id => 'reply_id',:message => 'message')","<p>flickr.groups.discuss.replies.edit request.\n<p>Edit a topic reply.\n<p><strong>Arguments</strong>\n"],["edit","FlickRaw::Flickr::Photos::Notes","FlickRaw/Flickr/Photos/Notes.html#method-i-edit","(:note_id => 'note_id',:note_x => 'note_x',:note_y => 'note_y',:note_w => 'note_w',:note_h => 'note_h',:note_text => 'note_text')","<p>flickr.photos.notes.edit request.\n<p>Edit a note on a photo. Coordinates and sizes are in pixels, based on …\n"],["editComment","FlickRaw::Flickr::Photos::Comments","FlickRaw/Flickr/Photos/Comments.html#method-i-editComment","(:comment_id => 'comment_id',:comment_text => 'comment_text',:use_text_for_links => 'use_text_for_links',:expand_bbml => 'expand_bbml',:full_result => 'full_result',:secure_image_embeds => 'secure_image_embeds',:bbml_need_all_photo_sizes => 'bbml_need_all_photo_sizes',:primary_photo_longest_dimension => 'primary_photo_longest_dimension')","<p>flickr.photos.comments.editComment request.\n<p>Edit the text of a comment as the currently authenticated …\n"],["editComment","FlickRaw::Flickr::Photosets::Comments","FlickRaw/Flickr/Photosets/Comments.html#method-i-editComment","(:comment_id => 'comment_id',:comment_text => 'comment_text')","<p>flickr.photosets.comments.editComment request.\n<p>Edit the text of a comment as the currently authenticated …\n"],["editCoords","FlickRaw::Flickr::Photos::People","FlickRaw/Flickr/Photos/People.html#method-i-editCoords","(:photo_id => 'photo_id',:user_id => 'user_id',:person_x => 'person_x',:person_y => 'person_y',:person_w => 'person_w',:person_h => 'person_h',:email => 'email')","<p>flickr.photos.people.editCoords request.\n<p>Edit the bounding box of an existing person on a photo.\n<p><strong>Arguments</strong> …\n"],["editMeta","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-editMeta","(:gallery_id => 'gallery_id',:title => 'title',:description => 'description')","<p>flickr.galleries.editMeta request.\n<p>Modify the meta-data for a gallery.\n<p><strong>Arguments</strong>\n"],["editMeta","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-editMeta","(:photoset_id => 'photoset_id',:title => 'title',:description => 'description')","<p>flickr.photosets.editMeta request.\n<p>Modify the meta-data for a photoset.\n<p><strong>Arguments</strong>\n"],["editPhoto","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-editPhoto","(:gallery_id => 'gallery_id',:photo_id => 'photo_id',:comment => 'comment')","<p>flickr.galleries.editPhoto request.\n<p>Edit the comment for a gallery photo.\n<p><strong>Arguments</strong>\n"],["editPhotos","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-editPhotos","(:gallery_id => 'gallery_id',:primary_photo_id => 'primary_photo_id',:photo_ids => 'photo_ids')","<p>flickr.galleries.editPhotos request.\n<p>Modify the photos in a gallery. Use this method to add, remove and …\n"],["editPhotos","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-editPhotos","(:photoset_id => 'photoset_id',:primary_photo_id => 'primary_photo_id',:photo_ids => 'photo_ids')","<p>flickr.photosets.editPhotos request.\n<p>Modify the photos in a photoset. Use this method to add, remove and …\n"],["favorites","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-favorites","","<p>Returns a Favorites object.\n"],["find","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-find","(:query => 'query',:bbox => 'bbox',:extras => 'extras',:safe => 'safe')","<p>flickr.places.find request.\n<p>Return a list of place IDs for a query string. The flickr.places.find\nmethod …\n"],["findByEmail","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-findByEmail","(:find_email => 'find_email')","<p>flickr.people.findByEmail request.\n<p>Return a user&#39;s NSID, given their email address\n<p><strong>Arguments</strong>\n"],["findByLatLon","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-findByLatLon","(:lat => 'lat',:lon => 'lon',:accuracy => 'accuracy')","<p>flickr.places.findByLatLon request.\n<p>Return a place ID for a latitude, longitude and accuracy triple.  …\n"],["findByUsername","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-findByUsername","(:username => 'username')","<p>flickr.people.findByUsername request.\n<p>Return a user&#39;s NSID, given their username.\n<p><strong>Arguments</strong>\n"],["flickr","Object","Object.html#method-i-flickr","()","<p>Use this to access the flickr API easily. You can type directly the flickr\nrequests as they are described …\n"],["galleries","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-galleries","","<p>Returns a Galleries object.\n"],["geo","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-geo","","<p>Returns a Geo object.\n"],["getAccessToken","FlickRaw::Flickr::Auth::Oauth","FlickRaw/Flickr/Auth/Oauth.html#method-i-getAccessToken","","<p>flickr.auth.oauth.getAccessToken request.\n<p>Exchange an auth token from the old Authentication API, to an …\n"],["getAllContexts","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getAllContexts","(:photo_id => 'photo_id')","<p>flickr.photos.getAllContexts request.\n<p>Returns all visible sets and pools the photo belongs to.\n<p><strong>Arguments</strong> …\n"],["getBrandModels","FlickRaw::Flickr::Cameras","FlickRaw/Flickr/Cameras.html#method-i-getBrandModels","(:brand => 'brand')","<p>flickr.cameras.getBrandModels request.\n<p>Retrieve all the models for a given camera brand.\n<p><strong>Arguments</strong>\n"],["getBrands","FlickRaw::Flickr::Cameras","FlickRaw/Flickr/Cameras.html#method-i-getBrands","","<p>flickr.cameras.getBrands request.\n<p>Returns all the brands of cameras that Flickr knows about.\n<p><strong>Arguments</strong> …\n"],["getCSVFiles","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getCSVFiles","","<p>flickr.stats.getCSVFiles request.\n<p>Returns a list of URLs for text files containing all your stats data …\n"],["getChildrenWithPhotosPublic","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getChildrenWithPhotosPublic","(:place_id => 'place_id',:woe_id => 'woe_id')","<p>flickr.places.getChildrenWithPhotosPublic request.\n<p>Return a list of locations with public photos that …\n"],["getClusterPhotos","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getClusterPhotos","(:tag => 'tag',:cluster_id => 'cluster_id')","<p>flickr.tags.getClusterPhotos request.\n<p>Returns the first 24 photos for a given tag cluster\n<p><strong>Arguments</strong>\n"],["getClusters","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getClusters","(:tag => 'tag')","<p>flickr.tags.getClusters request.\n<p>Gives you a list of tag clusters for the given tag.\n<p><strong>Arguments</strong>\n"],["getCollectionDomains","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getCollectionDomains","(:date => 'date',:collection_id => 'collection_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getCollectionDomains request.\n<p>Get a list of referring domains for a collection\n<p><strong>Arguments</strong>\n"],["getCollectionReferrers","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getCollectionReferrers","(:date => 'date',:domain => 'domain',:collection_id => 'collection_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getCollectionReferrers request.\n<p>Get a list of referrers from a given domain to a collection …\n"],["getCollectionStats","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getCollectionStats","(:date => 'date',:collection_id => 'collection_id')","<p>flickr.stats.getCollectionStats request.\n<p>Get the number of views on a collection for a given date.\n<p><strong>Arguments</strong> …\n"],["getContactsPhotos","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getContactsPhotos","(:count => 'count',:just_friends => 'just_friends',:single_photo => 'single_photo',:include_self => 'include_self',:extras => 'extras')","<p>flickr.photos.getContactsPhotos request.\n<p>Fetch a list of recent photos from the calling users&#39; contacts. …\n"],["getContactsPublicPhotos","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getContactsPublicPhotos","(:user_id => 'user_id',:count => 'count',:just_friends => 'just_friends',:single_photo => 'single_photo',:include_self => 'include_self',:extras => 'extras')","<p>flickr.photos.getContactsPublicPhotos request.\n<p>Fetch a list of recent public photos from a users&#39; …\n"],["getContentType","FlickRaw::Flickr::Prefs","FlickRaw/Flickr/Prefs.html#method-i-getContentType","","<p>flickr.prefs.getContentType request.\n<p>Returns the default content type preference for the user.\n<p><strong>Arguments</strong> …\n"],["getContext","FlickRaw::Flickr::Favorites","FlickRaw/Flickr/Favorites.html#method-i-getContext","(:photo_id => 'photo_id',:user_id => 'user_id',:num_prev => 'num_prev',:num_next => 'num_next',:extras => 'extras')","<p>flickr.favorites.getContext request.\n<p>Returns next and previous favorites for a photo in a user&#39;s favorites.\n…\n"],["getContext","FlickRaw::Flickr::Groups::Pools","FlickRaw/Flickr/Groups/Pools.html#method-i-getContext","(:photo_id => 'photo_id',:group_id => 'group_id',:num_prev => 'num_prev',:num_next => 'num_next',:extras => 'extras')","<p>flickr.groups.pools.getContext request.\n<p>Returns next and previous photos for a photo in a group pool. …\n"],["getContext","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getContext","(:photo_id => 'photo_id',:num_prev => 'num_prev',:num_next => 'num_next',:extras => 'extras',:order_by => 'order_by',:view_as => 'view_as')","<p>flickr.photos.getContext request.\n<p>Returns next and previous photos for a photo in a photostream.\n<p><strong>Arguments</strong> …\n"],["getContext","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-getContext","(:photo_id => 'photo_id',:photoset_id => 'photoset_id',:num_prev => 'num_prev',:num_next => 'num_next',:extras => 'extras')","<p>flickr.photosets.getContext request.\n<p>Returns next and previous photos for a photo in a set.\n<p><strong>Arguments</strong>\n"],["getCounts","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getCounts","(:dates => 'dates',:taken_dates => 'taken_dates')","<p>flickr.photos.getCounts request.\n<p>Gets a list of photo counts for the given date ranges for the calling …\n"],["getExif","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getExif","(:photo_id => 'photo_id',:secret => 'secret',:extras => 'extras')","<p>flickr.photos.getExif request.\n<p>Retrieves a list of EXIF/TIFF/GPS tags for a given photo. The calling user\n…\n"],["getFavorites","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getFavorites","(:photo_id => 'photo_id',:page => 'page',:per_page => 'per_page')","<p>flickr.photos.getFavorites request.\n<p>Returns the list of people who have favorited a given photo.\n<p><strong>Arguments</strong> …\n"],["getFrob","FlickRaw::Flickr::Auth","FlickRaw/Flickr/Auth.html#method-i-getFrob","","<p>flickr.auth.getFrob request.\n<p>Returns a frob to be used during authentication. This method call must be …\n"],["getFullToken","FlickRaw::Flickr::Auth","FlickRaw/Flickr/Auth.html#method-i-getFullToken","(:mini_token => 'mini_token')","<p>flickr.auth.getFullToken request.\n<p>Get the full authentication token for a mini-token. This method call …\n"],["getGeoPerms","FlickRaw::Flickr::Prefs","FlickRaw/Flickr/Prefs.html#method-i-getGeoPerms","","<p>flickr.prefs.getGeoPerms request.\n<p>Returns the default privacy level for geographic information attached …\n"],["getGroup","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-getGroup","(:group_id => 'group_id')","<p>flickr.urls.getGroup request.\n<p>Returns the url to a group&#39;s page.\n<p><strong>Arguments</strong>\n"],["getGroups","FlickRaw::Flickr::Groups::Pools","FlickRaw/Flickr/Groups/Pools.html#method-i-getGroups","(:page => 'page',:per_page => 'per_page',:extras => 'extras')","<p>flickr.groups.pools.getGroups request.\n<p>Returns a list of groups to which you can add photos.\n<p><strong>Arguments</strong> …\n"],["getGroups","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getGroups","(:user_id => 'user_id',:extras => 'extras',:page => 'page',:per_page => 'per_page')","<p>flickr.people.getGroups request.\n<p>Returns the list of groups a user is a member of.\n<p><strong>Arguments</strong>\n"],["getHidden","FlickRaw::Flickr::Prefs","FlickRaw/Flickr/Prefs.html#method-i-getHidden","","<p>flickr.prefs.getHidden request.\n<p>Returns the default hidden preference for the user.\n<p><strong>Arguments</strong>\n"],["getHotList","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getHotList","(:period => 'period',:count => 'count')","<p>flickr.tags.getHotList request.\n<p>Returns a list of hot tags for the given period.\n<p><strong>Arguments</strong>\n"],["getInfo","FlickRaw::Flickr::Collections","FlickRaw/Flickr/Collections.html#method-i-getInfo","(:collection_id => 'collection_id',:secure_image_embeds => 'secure_image_embeds')","<p>flickr.collections.getInfo request.\n<p>Returns information for a single collection.  Currently can only be …\n"],["getInfo","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-getInfo","(:gallery_id => 'gallery_id')","<p>flickr.galleries.getInfo request.\n<p><strong>Arguments</strong>\n<p>gallery_id <em>(required)</em>  &mdash; The gallery ID you are requesting information …\n"],["getInfo","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-getInfo","(:group_id => 'group_id',:lang => 'lang',:secure_image_embeds => 'secure_image_embeds')","<p>flickr.groups.getInfo request.\n<p>Get information about a group.\n<p><strong>Arguments</strong>\n"],["getInfo","FlickRaw::Flickr::Groups::Discuss::Replies","FlickRaw/Flickr/Groups/Discuss/Replies.html#method-i-getInfo","(:topic_id => 'topic_id',:reply_id => 'reply_id')","<p>flickr.groups.discuss.replies.getInfo request.\n<p>Get information on a group topic reply.\n<p><strong>Arguments</strong>\n"],["getInfo","FlickRaw::Flickr::Groups::Discuss::Topics","FlickRaw/Flickr/Groups/Discuss/Topics.html#method-i-getInfo","(:topic_id => 'topic_id')","<p>flickr.groups.discuss.topics.getInfo request.\n<p>Get information about a group discussion topic.\n<p><strong>Arguments</strong> …\n"],["getInfo","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getInfo","(:user_id => 'user_id',:url => 'url',:fb_connected => 'fb_connected',:storage => 'storage',:datecreate => 'datecreate')","<p>flickr.people.getInfo request.\n<p>Get information about a user.\n<p><strong>Arguments</strong>\n"],["getInfo","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getInfo","(:photo_id => 'photo_id',:secret => 'secret',:humandates => 'humandates',:privacy_filter => 'privacy_filter',:get_contexts => 'get_contexts',:get_geofences => 'get_geofences',:datecreate => 'datecreate',:extras => 'extras')","<p>flickr.photos.getInfo request.\n<p>Get information about a photo. The calling user must have permission to …\n"],["getInfo","FlickRaw::Flickr::Photos::Licenses","FlickRaw/Flickr/Photos/Licenses.html#method-i-getInfo","","<p>flickr.photos.licenses.getInfo request.\n<p>Fetches a list of available photo licenses for Flickr.\n<p><strong>Arguments</strong> …\n"],["getInfo","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-getInfo","(:photoset_id => 'photoset_id')","<p>flickr.photosets.getInfo request.\n<p>Gets information about a photoset.\n<p><strong>Arguments</strong>\n"],["getInfo","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getInfo","(:place_id => 'place_id',:woe_id => 'woe_id')","<p>flickr.places.getInfo request.\n<p>Get informations about a place.\n<p><strong>Arguments</strong>\n"],["getInfoByUrl","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getInfoByUrl","(:url => 'url')","<p>flickr.places.getInfoByUrl request.\n<p>Lookup information about a place, by its flickr.com/places URL.\n<p><strong>Arguments</strong> …\n"],["getInstitutions","FlickRaw::Flickr::Commons","FlickRaw/Flickr/Commons.html#method-i-getInstitutions","","<p>flickr.commons.getInstitutions request.\n<p>Retrieves a list of the current Commons institutions.\n<p><strong>Arguments</strong> …\n"],["getLimits","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getLimits","","<p>flickr.people.getLimits request.\n<p>Returns the photo and video limits that apply to the calling user account.\n…\n"],["getList","FlickRaw::Flickr::Blogs","FlickRaw/Flickr/Blogs.html#method-i-getList","(:service => 'service')","<p>flickr.blogs.getList request.\n<p>Get a list of configured blogs for the calling user.\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Contacts","FlickRaw/Flickr/Contacts.html#method-i-getList","(:filter => 'filter',:page => 'page',:per_page => 'per_page',:sort => 'sort',:fields => 'fields')","<p>flickr.contacts.getList request.\n<p>Get a list of contacts for the calling user.\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Favorites","FlickRaw/Flickr/Favorites.html#method-i-getList","(:user_id => 'user_id',:jump_to => 'jump_to',:min_fave_date => 'min_fave_date',:max_fave_date => 'max_fave_date',:get_user_info => 'get_user_info',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.favorites.getList request.\n<p>Returns a list of the user&#39;s favorite photos. Only photos which …\n"],["getList","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-getList","(:user_id => 'user_id',:per_page => 'per_page',:page => 'page',:primary_photo_extras => 'primary_photo_extras')","<p>flickr.galleries.getList request.\n<p>Return the list of galleries created by a user.  Sorted from newest …\n"],["getList","FlickRaw::Flickr::Groups::Discuss::Replies","FlickRaw/Flickr/Groups/Discuss/Replies.html#method-i-getList","(:topic_id => 'topic_id',:per_page => 'per_page',:page => 'page')","<p>flickr.groups.discuss.replies.getList request.\n<p>Get a list of replies from a group discussion topic.\n<p><strong>Arguments</strong> …\n"],["getList","FlickRaw::Flickr::Groups::Discuss::Topics","FlickRaw/Flickr/Groups/Discuss/Topics.html#method-i-getList","(:group_id => 'group_id',:per_page => 'per_page',:page => 'page')","<p>flickr.groups.discuss.topics.getList request.\n<p>Get a list of discussion topics in a group.\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Groups::Members","FlickRaw/Flickr/Groups/Members.html#method-i-getList","(:group_id => 'group_id',:membertypes => 'membertypes',:per_page => 'per_page',:page => 'page')","<p>flickr.groups.members.getList request.\n<p>Get a list of the members of a group.  The call must be signed …\n"],["getList","FlickRaw::Flickr::Interestingness","FlickRaw/Flickr/Interestingness.html#method-i-getList","(:date => 'date',:use_panda => 'use_panda',:offset_days => 'offset_days',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.interestingness.getList request.\n<p>Returns the list of interesting photos for the most recent day …\n"],["getList","FlickRaw::Flickr::Panda","FlickRaw/Flickr/Panda.html#method-i-getList","","<p>flickr.panda.getList request.\n<p>Return a list of Flickr pandas, from whom you can request photos using the\n…\n"],["getList","FlickRaw::Flickr::Photos::Comments","FlickRaw/Flickr/Photos/Comments.html#method-i-getList","(:photo_id => 'photo_id',:min_comment_date => 'min_comment_date',:max_comment_date => 'max_comment_date',:page => 'page',:per_page => 'per_page',:include_faves => 'include_faves',:sort => 'sort',:secure_image_embeds => 'secure_image_embeds',:offset => 'offset',:limit => 'limit',:bbml_need_all_photo_sizes => 'bbml_need_all_photo_sizes',:primary_photo_longest_dimension => 'primary_photo_longest_dimension')","<p>flickr.photos.comments.getList request.\n<p>Returns the comments for a photo\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Photos::People","FlickRaw/Flickr/Photos/People.html#method-i-getList","(:photo_id => 'photo_id',:extras => 'extras')","<p>flickr.photos.people.getList request.\n<p>Get a list of people in a given photo.\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Photos::Suggestions","FlickRaw/Flickr/Photos/Suggestions.html#method-i-getList","(:photo_id => 'photo_id',:status_id => 'status_id')","<p>flickr.photos.suggestions.getList request.\n<p>Return a list of suggestions for a user that are pending approval. …\n"],["getList","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-getList","(:user_id => 'user_id',:page => 'page',:per_page => 'per_page',:primary_photo_extras => 'primary_photo_extras')","<p>flickr.photosets.getList request.\n<p>Returns the photosets belonging to the specified user.\n<p><strong>Arguments</strong>\n"],["getList","FlickRaw::Flickr::Photosets::Comments","FlickRaw/Flickr/Photosets/Comments.html#method-i-getList","(:photoset_id => 'photoset_id')","<p>flickr.photosets.comments.getList request.\n<p>Returns the comments for a photoset.\n<p><strong>Arguments</strong>\n"],["getListForPhoto","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-getListForPhoto","(:photo_id => 'photo_id',:per_page => 'per_page',:page => 'page')","<p>flickr.galleries.getListForPhoto request.\n<p>Return the list of galleries to which a photo has been added. …\n"],["getListPhoto","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getListPhoto","(:photo_id => 'photo_id')","<p>flickr.tags.getListPhoto request.\n<p>Get the tag list for a given photo.\n<p><strong>Arguments</strong>\n"],["getListRecentlyUploaded","FlickRaw::Flickr::Contacts","FlickRaw/Flickr/Contacts.html#method-i-getListRecentlyUploaded","(:date_lastupload => 'date_lastupload',:filter => 'filter')","<p>flickr.contacts.getListRecentlyUploaded request.\n<p>Return a list of contacts for a user who have recently …\n"],["getListUser","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getListUser","(:user_id => 'user_id')","<p>flickr.tags.getListUser request.\n<p>Get the tag list for a given user (or the currently logged in user). …\n"],["getListUserPopular","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getListUserPopular","(:user_id => 'user_id',:count => 'count')","<p>flickr.tags.getListUserPopular request.\n<p>Get the popular tags for a given user (or the currently logged …\n"],["getListUserRaw","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getListUserRaw","(:tag => 'tag')","<p>flickr.tags.getListUserRaw request.\n<p>Get the raw versions of a given tag (or all tags) for the currently …\n"],["getLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-getLocation","(:photo_id => 'photo_id',:extras => 'extras')","<p>flickr.photos.geo.getLocation request.\n<p>Get the geo data (latitude and longitude and the accuracy level) …\n"],["getMethodInfo","FlickRaw::Flickr::Reflection","FlickRaw/Flickr/Reflection.html#method-i-getMethodInfo","(:method_name => 'method_name')","<p>flickr.reflection.getMethodInfo request.\n<p>Returns information for a given flickr API method.\n<p><strong>Arguments</strong>\n"],["getMethods","FlickRaw::Flickr::Reflection","FlickRaw/Flickr/Reflection.html#method-i-getMethods","","<p>flickr.reflection.getMethods request.\n<p>Returns a list of available flickr API methods.\n<p><strong>Arguments</strong>\n"],["getMostFrequentlyUsed","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getMostFrequentlyUsed","","<p>flickr.tags.getMostFrequentlyUsed request.\n<p>Returns a list of most frequently used tags for a user.\n<p><strong>Arguments</strong> …\n"],["getNamespaces","FlickRaw::Flickr::Machinetags","FlickRaw/Flickr/Machinetags.html#method-i-getNamespaces","(:predicate => 'predicate',:per_page => 'per_page',:page => 'page')","<p>flickr.machinetags.getNamespaces request.\n<p>Return a list of unique namespaces, optionally limited by a …\n"],["getNotInSet","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getNotInSet","(:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:privacy_filter => 'privacy_filter',:media => 'media',:min_upload_date => 'min_upload_date',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.getNotInSet request.\n<p>Returns a list of your photos that are not part of any sets.\n<p><strong>Arguments</strong> …\n"],["getPairs","FlickRaw::Flickr::Machinetags","FlickRaw/Flickr/Machinetags.html#method-i-getPairs","(:namespace => 'namespace',:predicate => 'predicate',:per_page => 'per_page',:page => 'page')","<p>flickr.machinetags.getPairs request.\n<p>Return a list of unique namespace and predicate pairs, optionally …\n"],["getPerms","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getPerms","(:photo_id => 'photo_id')","<p>flickr.photos.getPerms request.\n<p>Get permissions for a photo.\n<p><strong>Arguments</strong>\n"],["getPerms","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-getPerms","(:photo_id => 'photo_id')","<p>flickr.photos.geo.getPerms request.\n<p>Get permissions for who may view geo data for a photo.\n<p><strong>Arguments</strong>\n"],["getPhotoDomains","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotoDomains","(:date => 'date',:photo_id => 'photo_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotoDomains request.\n<p>Get a list of referring domains for a photo\n<p><strong>Arguments</strong>\n"],["getPhotoReferrers","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotoReferrers","(:date => 'date',:domain => 'domain',:photo_id => 'photo_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotoReferrers request.\n<p>Get a list of referrers from a given domain to a photo\n<p><strong>Arguments</strong> …\n"],["getPhotoStats","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotoStats","(:date => 'date',:photo_id => 'photo_id')","<p>flickr.stats.getPhotoStats request.\n<p>Get the number of views, comments and favorites on a photo for a given …\n"],["getPhotos","FlickRaw::Flickr::Galleries","FlickRaw/Flickr/Galleries.html#method-i-getPhotos","(:gallery_id => 'gallery_id',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.galleries.getPhotos request.\n<p>Return the list of photos for a gallery\n<p><strong>Arguments</strong>\n"],["getPhotos","FlickRaw::Flickr::Groups::Pools","FlickRaw/Flickr/Groups/Pools.html#method-i-getPhotos","(:group_id => 'group_id',:tags => 'tags',:user_id => 'user_id',:safe_search => 'safe_search',:jump_to => 'jump_to',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.groups.pools.getPhotos request.\n<p>Returns a list of pool photos for a given group, based on the permissions …\n"],["getPhotos","FlickRaw::Flickr::Panda","FlickRaw/Flickr/Panda.html#method-i-getPhotos","(:panda_name => 'panda_name',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.panda.getPhotos request.\n<p>Ask the Flickr Pandas for a list of recent public (and “safe”) …\n"],["getPhotos","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getPhotos","(:user_id => 'user_id',:safe_search => 'safe_search',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:content_type => 'content_type',:privacy_filter => 'privacy_filter',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.people.getPhotos request.\n<p>Return photos from the given user&#39;s photostream. Only photos visible …\n"],["getPhotos","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-getPhotos","(:photoset_id => 'photoset_id',:extras => 'extras',:privacy_filter => 'privacy_filter',:per_page => 'per_page',:page => 'page',:media => 'media')","<p>flickr.photosets.getPhotos request.\n<p>Get the list of photos in a set.\n<p><strong>Arguments</strong>\n"],["getPhotosOf","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getPhotosOf","(:user_id => 'user_id',:owner_id => 'owner_id',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.people.getPhotosOf request.\n<p>Returns a list of photos containing a particular Flickr member.\n<p><strong>Arguments</strong> …\n"],["getPhotosetDomains","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotosetDomains","(:date => 'date',:photoset_id => 'photoset_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotosetDomains request.\n<p>Get a list of referring domains for a photoset\n<p><strong>Arguments</strong>\n"],["getPhotosetReferrers","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotosetReferrers","(:date => 'date',:domain => 'domain',:photoset_id => 'photoset_id',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotosetReferrers request.\n<p>Get a list of referrers from a given domain to a photoset\n<p><strong>Arguments</strong> …\n"],["getPhotosetStats","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotosetStats","(:date => 'date',:photoset_id => 'photoset_id')","<p>flickr.stats.getPhotosetStats request.\n<p>Get the number of views on a photoset for a given date.\n<p><strong>Arguments</strong> …\n"],["getPhotostreamDomains","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotostreamDomains","(:date => 'date',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotostreamDomains request.\n<p>Get a list of referring domains for a photostream\n<p><strong>Arguments</strong> …\n"],["getPhotostreamReferrers","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotostreamReferrers","(:date => 'date',:domain => 'domain',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPhotostreamReferrers request.\n<p>Get a list of referrers from a given domain to a user&#39;s …\n"],["getPhotostreamStats","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPhotostreamStats","(:date => 'date')","<p>flickr.stats.getPhotostreamStats request.\n<p>Get the number of views on a user&#39;s photostream for a given …\n"],["getPlaceTypes","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getPlaceTypes","","<p>flickr.places.getPlaceTypes request.\n<p>Fetches a list of available place types for Flickr.\n<p><strong>Arguments</strong>\n"],["getPopularPhotos","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getPopularPhotos","(:date => 'date',:sort => 'sort',:per_page => 'per_page',:page => 'page')","<p>flickr.stats.getPopularPhotos request.\n<p>List the photos with the most views, comments or favorites\n<p><strong>Arguments</strong> …\n"],["getPredicates","FlickRaw::Flickr::Machinetags","FlickRaw/Flickr/Machinetags.html#method-i-getPredicates","(:namespace => 'namespace',:per_page => 'per_page',:page => 'page')","<p>flickr.machinetags.getPredicates request.\n<p>Return a list of unique predicates, optionally limited by a …\n"],["getPrivacy","FlickRaw::Flickr::Prefs","FlickRaw/Flickr/Prefs.html#method-i-getPrivacy","","<p>flickr.prefs.getPrivacy request.\n<p>Returns the default privacy level preference for the user.\n<p>Possible values …\n"],["getPublicGroups","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getPublicGroups","(:user_id => 'user_id',:invitation_only => 'invitation_only')","<p>flickr.people.getPublicGroups request.\n<p>Returns the list of public groups a user is a member of.\n<p><strong>Arguments</strong> …\n"],["getPublicList","FlickRaw::Flickr::Contacts","FlickRaw/Flickr/Contacts.html#method-i-getPublicList","(:user_id => 'user_id',:page => 'page',:per_page => 'per_page',:show_more => 'show_more')","<p>flickr.contacts.getPublicList request.\n<p>Get the contact list for a user.\n<p><strong>Arguments</strong>\n"],["getPublicList","FlickRaw::Flickr::Favorites","FlickRaw/Flickr/Favorites.html#method-i-getPublicList","(:user_id => 'user_id',:jump_to => 'jump_to',:min_fave_date => 'min_fave_date',:max_fave_date => 'max_fave_date',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.favorites.getPublicList request.\n<p>Returns a list of favorite public photos for the given user.\n<p><strong>Arguments</strong> …\n"],["getPublicPhotos","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getPublicPhotos","(:user_id => 'user_id',:safe_search => 'safe_search',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.people.getPublicPhotos request.\n<p>Get a list of public photos for the given user.\n<p><strong>Arguments</strong>\n"],["getRecent","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getRecent","(:jump_to => 'jump_to',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.getRecent request.\n<p>Returns a list of the latest public photos uploaded to flickr.\n<p><strong>Arguments</strong> …\n"],["getRecentForContacts","FlickRaw::Flickr::Photos::Comments","FlickRaw/Flickr/Photos/Comments.html#method-i-getRecentForContacts","(:date_lastcomment => 'date_lastcomment',:contacts_filter => 'contacts_filter',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.comments.getRecentForContacts request.\n<p>Return the list of photos belonging to your contacts …\n"],["getRecentValues","FlickRaw::Flickr::Machinetags","FlickRaw/Flickr/Machinetags.html#method-i-getRecentValues","(:namespace => 'namespace',:predicate => 'predicate',:added_since => 'added_since')","<p>flickr.machinetags.getRecentValues request.\n<p>Fetch recently used (or created) machine tags values.\n<p><strong>Arguments</strong> …\n"],["getRelated","FlickRaw::Flickr::Tags","FlickRaw/Flickr/Tags.html#method-i-getRelated","(:tag => 'tag')","<p>flickr.tags.getRelated request.\n<p>Returns a list of tags &#39;related&#39; to the given tag, based on\nclustered …\n"],["getSafetyLevel","FlickRaw::Flickr::Prefs","FlickRaw/Flickr/Prefs.html#method-i-getSafetyLevel","","<p>flickr.prefs.getSafetyLevel request.\n<p>Returns the default safety level preference for the user.\n<p><strong>Arguments</strong> …\n"],["getServices","FlickRaw::Flickr::Blogs","FlickRaw/Flickr/Blogs.html#method-i-getServices","","<p>flickr.blogs.getServices request.\n<p>Return a list of Flickr supported blogging services\n<p><strong>Arguments</strong>\n"],["getShapeHistory","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getShapeHistory","(:place_id => 'place_id',:woe_id => 'woe_id')","<p>flickr.places.getShapeHistory request.\n<p>Return an historical list of all the shape data generated for a …\n"],["getSizes","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getSizes","(:photo_id => 'photo_id')","<p>flickr.photos.getSizes request.\n<p>Returns the available sizes for a photo.  The calling user must have\npermission …\n"],["getSubscriptions","FlickRaw::Flickr::Push","FlickRaw/Flickr/Push.html#method-i-getSubscriptions","","<p>flickr.push.getSubscriptions request.\n<p>Returns a list of the subscriptions for the logged-in user. (this …\n"],["getTaggingSuggestions","FlickRaw::Flickr::Contacts","FlickRaw/Flickr/Contacts.html#method-i-getTaggingSuggestions","(:include_self => 'include_self',:include_address_book => 'include_address_book',:per_page => 'per_page',:page => 'page')","<p>flickr.contacts.getTaggingSuggestions request.\n<p>Get suggestions for tagging people in photos based on the …\n"],["getToken","FlickRaw::Flickr::Auth","FlickRaw/Flickr/Auth.html#method-i-getToken","(:frob => 'frob')","<p>flickr.auth.getToken request.\n<p>Returns the auth token for the given frob, if one has been attached. This …\n"],["getTopPlacesList","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-getTopPlacesList","(:place_type_id => 'place_type_id',:date => 'date',:woe_id => 'woe_id',:place_id => 'place_id')","<p>flickr.places.getTopPlacesList request.\n<p>Return the top 100 most geotagged places for a day.\n<p><strong>Arguments</strong>\n"],["getTopics","FlickRaw::Flickr::Push","FlickRaw/Flickr/Push.html#method-i-getTopics","","<p>flickr.push.getTopics request.\n<p>All the different flavours of anteater. (this method is experimental and …\n"],["getTotalViews","FlickRaw::Flickr::Stats","FlickRaw/Flickr/Stats.html#method-i-getTotalViews","(:date => 'date')","<p>flickr.stats.getTotalViews request.\n<p>Get the overall view counts for an account\n<p><strong>Arguments</strong>\n"],["getTree","FlickRaw::Flickr::Collections","FlickRaw/Flickr/Collections.html#method-i-getTree","(:collection_id => 'collection_id',:user_id => 'user_id')","<p>flickr.collections.getTree request.\n<p>Returns a tree (or sub tree) of collections belonging to a given user. …\n"],["getUntagged","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getUntagged","(:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:privacy_filter => 'privacy_filter',:media => 'media',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.getUntagged request.\n<p>Returns a list of your photos with no tags.\n<p><strong>Arguments</strong>\n"],["getUploadStatus","FlickRaw::Flickr::People","FlickRaw/Flickr/People.html#method-i-getUploadStatus","","<p>flickr.people.getUploadStatus request.\n<p>Returns information for the calling user related to photo uploads. …\n"],["getUserPhotos","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-getUserPhotos","(:user_id => 'user_id')","<p>flickr.urls.getUserPhotos request.\n<p>Returns the url to a user&#39;s photos.\n<p><strong>Arguments</strong>\n"],["getUserProfile","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-getUserProfile","(:user_id => 'user_id')","<p>flickr.urls.getUserProfile request.\n<p>Returns the url to a user&#39;s profile.\n<p><strong>Arguments</strong>\n"],["getValues","FlickRaw::Flickr::Machinetags","FlickRaw/Flickr/Machinetags.html#method-i-getValues","(:namespace => 'namespace',:predicate => 'predicate',:per_page => 'per_page',:page => 'page',:usage => 'usage')","<p>flickr.machinetags.getValues request.\n<p>Return a list of unique values for a namespace and predicate.\n<p><strong>Arguments</strong> …\n"],["getWithGeoData","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getWithGeoData","(:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:privacy_filter => 'privacy_filter',:sort => 'sort',:media => 'media',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.getWithGeoData request.\n<p>Returns a list of your geo-tagged photos.\n<p><strong>Arguments</strong>\n"],["getWithoutGeoData","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-getWithoutGeoData","(:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:privacy_filter => 'privacy_filter',:sort => 'sort',:media => 'media',:min_upload_date => 'min_upload_date',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.getWithoutGeoData request.\n<p>Returns a list of your photos which haven&#39;t been geo-tagged. …\n"],["groups","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-groups","","<p>Returns a Groups object.\n"],["interestingness","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-interestingness","","<p>Returns a Interestingness object.\n"],["join","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-join","(:group_id => 'group_id',:accept_rules => 'accept_rules')","<p>flickr.groups.join request.\n<p>Join a public group as a member.\n<p><strong>Arguments</strong>\n"],["joinRequest","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-joinRequest","(:group_id => 'group_id',:message => 'message',:accept_rules => 'accept_rules')","<p>flickr.groups.joinRequest request.\n<p>Request to join a group that is invitation-only.\n<p><strong>Arguments</strong>\n"],["leave","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-leave","(:group_id => 'group_id',:delete_photos => 'delete_photos')","<p>flickr.groups.leave request.\n<p>Leave a group.\n<p>If the user is the only administrator left, and there are other …\n"],["licenses","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-licenses","","<p>Returns a Licenses object.\n"],["login","FlickRaw::Flickr::Test","FlickRaw/Flickr/Test.html#method-i-login","","<p>flickr.test.login request.\n<p>A testing method which checks if the caller is logged in then returns their\n…\n"],["lookupGallery","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-lookupGallery","(:url => 'url')","<p>flickr.urls.lookupGallery request.\n<p>Returns gallery info, by url.\n<p><strong>Arguments</strong>\n"],["lookupGroup","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-lookupGroup","(:url => 'url')","<p>flickr.urls.lookupGroup request.\n<p>Returns a group NSID, given the url to a group&#39;s page or photo pool. …\n"],["lookupUser","FlickRaw::Flickr::Urls","FlickRaw/Flickr/Urls.html#method-i-lookupUser","(:url => 'url')","<p>flickr.urls.lookupUser request.\n<p>Returns a user NSID, given the url to a user&#39;s photos or profile. …\n"],["machinetags","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-machinetags","","<p>Returns a Machinetags object.\n"],["members","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-members","","<p>Returns a Members object.\n"],["notes","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-notes","","<p>Returns a Notes object.\n"],["null","FlickRaw::Flickr::Test","FlickRaw/Flickr/Test.html#method-i-null","","<p>flickr.test.null request.\n<p>Null test\n<p><strong>Arguments</strong>\n"],["oauth","FlickRaw::Flickr::Auth","FlickRaw/Flickr/Auth.html#method-i-oauth","","<p>Returns a Oauth object.\n"],["orderSets","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-orderSets","(:photoset_ids => 'photoset_ids')","<p>flickr.photosets.orderSets request.\n<p>Set the order of photosets for the calling user.\n<p><strong>Arguments</strong>\n"],["panda","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-panda","","<p>Returns a Panda object.\n"],["people","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-people","","<p>Returns a People object.\n"],["people","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-people","","<p>Returns a People object.\n"],["photos","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-photos","","<p>Returns a Photos object.\n"],["photosForLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-photosForLocation","(:lat => 'lat',:lon => 'lon',:accuracy => 'accuracy',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.geo.photosForLocation request.\n<p>Return a list of photos for the calling user at a specific …\n"],["photosets","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-photosets","","<p>Returns a Photosets object.\n"],["places","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-places","","<p>Returns a Places object.\n"],["placesForBoundingBox","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-placesForBoundingBox","(:bbox => 'bbox',:place_type => 'place_type',:place_type_id => 'place_type_id',:recursive => 'recursive')","<p>flickr.places.placesForBoundingBox request.\n<p>Return all the locations of a matching place type for a bounding …\n"],["placesForContacts","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-placesForContacts","(:place_type => 'place_type',:place_type_id => 'place_type_id',:woe_id => 'woe_id',:place_id => 'place_id',:threshold => 'threshold',:contacts => 'contacts',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date')","<p>flickr.places.placesForContacts request.\n<p>Return a list of the top 100 unique places clustered by a given …\n"],["placesForTags","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-placesForTags","(:place_type_id => 'place_type_id',:woe_id => 'woe_id',:place_id => 'place_id',:threshold => 'threshold',:tags => 'tags',:tag_mode => 'tag_mode',:machine_tags => 'machine_tags',:machine_tag_mode => 'machine_tag_mode',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date')","<p>flickr.places.placesForTags request.\n<p>Return a list of the top 100 unique places clustered by a given placetype …\n"],["placesForUser","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-placesForUser","(:place_type_id => 'place_type_id',:place_type => 'place_type',:woe_id => 'woe_id',:place_id => 'place_id',:threshold => 'threshold',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date')","<p>flickr.places.placesForUser request.\n<p>Return a list of the top 100 unique places clustered by a given placetype …\n"],["pools","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-pools","","<p>Returns a Pools object.\n"],["postPhoto","FlickRaw::Flickr::Blogs","FlickRaw/Flickr/Blogs.html#method-i-postPhoto","(:blog_id => 'blog_id',:photo_id => 'photo_id',:title => 'title',:description => 'description',:blog_password => 'blog_password',:service => 'service')","<p>flickr.blogs.postPhoto request.\n<p><strong>Arguments</strong>\n<p>blog_id  &mdash; The id of the blog to post to.\n"],["prefs","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-prefs","","<p>Returns a Prefs object.\n"],["push","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-push","","<p>Returns a Push object.\n"],["recentlyUpdated","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-recentlyUpdated","(:min_date => 'min_date',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.recentlyUpdated request.\n<p>Return a list of your photos that have been recently created or …\n"],["reflection","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-reflection","","<p>Returns a Reflection object.\n"],["rejectSuggestion","FlickRaw::Flickr::Photos::Suggestions","FlickRaw/Flickr/Photos/Suggestions.html#method-i-rejectSuggestion","(:suggestion_id => 'suggestion_id')","<p>flickr.photos.suggestions.rejectSuggestion request.\n<p>Reject a suggestion for a photo.\n<p><strong>Arguments</strong>\n"],["remove","FlickRaw::Flickr::Favorites","FlickRaw/Flickr/Favorites.html#method-i-remove","(:photo_id => 'photo_id',:user_id => 'user_id')","<p>flickr.favorites.remove request.\n<p>Removes a photo from a user&#39;s favorites list.\n<p><strong>Arguments</strong>\n"],["remove","FlickRaw::Flickr::Groups::Pools","FlickRaw/Flickr/Groups/Pools.html#method-i-remove","(:photo_id => 'photo_id',:group_id => 'group_id')","<p>flickr.groups.pools.remove request.\n<p>Remove a photo from a group pool.\n<p><strong>Arguments</strong>\n"],["removeLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-removeLocation","(:photo_id => 'photo_id')","<p>flickr.photos.geo.removeLocation request.\n<p>Removes the geo data associated with a photo.\n<p><strong>Arguments</strong>\n"],["removePhoto","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-removePhoto","(:photoset_id => 'photoset_id',:photo_id => 'photo_id')","<p>flickr.photosets.removePhoto request.\n<p>Remove a photo from a photoset.\n<p><strong>Arguments</strong>\n"],["removePhotos","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-removePhotos","(:photoset_id => 'photoset_id',:photo_ids => 'photo_ids')","<p>flickr.photosets.removePhotos request.\n<p>Remove multiple photos from a photoset.\n<p><strong>Arguments</strong>\n"],["removeSuggestion","FlickRaw::Flickr::Photos::Suggestions","FlickRaw/Flickr/Photos/Suggestions.html#method-i-removeSuggestion","(:suggestion_id => 'suggestion_id')","<p>flickr.photos.suggestions.removeSuggestion request.\n<p>Remove a suggestion, made by the calling user, from …\n"],["removeTag","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-removeTag","(:tag_id => 'tag_id')","<p>flickr.photos.removeTag request.\n<p>Remove a tag from a photo.\n<p><strong>Arguments</strong>\n"],["reorderPhotos","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-reorderPhotos","(:photoset_id => 'photoset_id',:photo_ids => 'photo_ids')","<p>flickr.photosets.reorderPhotos request.\n<p><strong>Arguments</strong>\n<p>photoset_id <em>(required)</em>  &mdash; The id of the photoset to reorder. …\n"],["replies","FlickRaw::Flickr::Groups::Discuss","FlickRaw/Flickr/Groups/Discuss.html#method-i-replies","","<p>Returns a Replies object.\n"],["resolvePlaceId","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-resolvePlaceId","(:place_id => 'place_id')","<p>flickr.places.resolvePlaceId request.\n<p>Find Flickr Places information by Place ID. This method has been …\n"],["resolvePlaceURL","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-resolvePlaceURL","(:url => 'url')","<p>flickr.places.resolvePlaceURL request.\n<p>Find Flickr Places information by Place URL. This method has been …\n"],["rotate","FlickRaw::Flickr::Photos::Transform","FlickRaw/Flickr/Photos/Transform.html#method-i-rotate","(:photo_id => 'photo_id',:degrees => 'degrees')","<p>flickr.photos.transform.rotate request.\n<p>Rotate a photo.\n<p><strong>Arguments</strong>\n"],["search","FlickRaw::Flickr::Groups","FlickRaw/Flickr/Groups.html#method-i-search","(:text => 'text',:per_page => 'per_page',:page => 'page',:user_id => 'user_id',:safe_search => 'safe_search')","<p>flickr.groups.search request.\n<p>Search for groups. 18+ groups will only be returned for authenticated calls\n…\n"],["search","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-search","(:user_id => 'user_id',:tags => 'tags',:tag_mode => 'tag_mode',:text => 'text',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date',:license => 'license',:sort => 'sort',:privacy_filter => 'privacy_filter',:bbox => 'bbox',:accuracy => 'accuracy',:safe_search => 'safe_search',:content_type => 'content_type',:machine_tags => 'machine_tags',:machine_tag_mode => 'machine_tag_mode',:group_id => 'group_id',:faves => 'faves',:camera => 'camera',:jump_to => 'jump_to',:contacts => 'contacts',:woe_id => 'woe_id',:place_id => 'place_id',:media => 'media',:has_geo => 'has_geo',:geo_context => 'geo_context',:lat => 'lat',:lon => 'lon',:radius => 'radius',:radius_units => 'radius_units',:is_commons => 'is_commons',:in_gallery => 'in_gallery',:person_id => 'person_id',:is_getty => 'is_getty',:username => 'username',:exif_min_exposure => 'exif_min_exposure',:exif_max_exposure => 'exif_max_exposure',:exif_min_aperture => 'exif_min_aperture',:exif_max_aperture => 'exif_max_aperture',:exif_min_focallen => 'exif_min_focallen',:exif_max_focallen => 'exif_max_focallen',:exclude_user_id => 'exclude_user_id',:extras => 'extras',:per_page => 'per_page',:page => 'page')","<p>flickr.photos.search request.\n<p>Return a list of photos matching some criteria. Only photos visible to the\n…\n"],["setContentType","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setContentType","(:photo_id => 'photo_id',:content_type => 'content_type')","<p>flickr.photos.setContentType request.\n<p>Set the content type of a photo.\n<p><strong>Arguments</strong>\n"],["setContext","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-setContext","(:photo_id => 'photo_id',:context => 'context')","<p>flickr.photos.geo.setContext request.\n<p>Indicate the state of a photo&#39;s geotagginess beyond latitude …\n"],["setDates","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setDates","(:photo_id => 'photo_id',:date_posted => 'date_posted',:date_taken => 'date_taken',:date_taken_granularity => 'date_taken_granularity')","<p>flickr.photos.setDates request.\n<p>Set one or both of the dates for a photo.\n<p><strong>Arguments</strong>\n"],["setLicense","FlickRaw::Flickr::Photos::Licenses","FlickRaw/Flickr/Photos/Licenses.html#method-i-setLicense","(:photo_id => 'photo_id',:license_id => 'license_id')","<p>flickr.photos.licenses.setLicense request.\n<p>Sets the license for a photo.\n<p><strong>Arguments</strong>\n"],["setLocation","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-setLocation","(:photo_id => 'photo_id',:lat => 'lat',:lon => 'lon',:accuracy => 'accuracy',:context => 'context',:bookmark_id => 'bookmark_id',:is_public => 'is_public',:is_contact => 'is_contact',:is_friend => 'is_friend',:is_family => 'is_family',:foursquare_id => 'foursquare_id',:woeid => 'woeid')","<p>flickr.photos.geo.setLocation request.\n<p>Sets the geo data (latitude and longitude and, optionally, the …\n"],["setMeta","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setMeta","(:photo_id => 'photo_id',:title => 'title',:description => 'description')","<p>flickr.photos.setMeta request.\n<p>Set the meta information for a photo.\n<p><strong>Arguments</strong>\n"],["setPerms","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setPerms","(:photo_id => 'photo_id',:is_public => 'is_public',:is_friend => 'is_friend',:is_family => 'is_family',:perm_comment => 'perm_comment',:perm_addmeta => 'perm_addmeta')","<p>flickr.photos.setPerms request.\n<p>Set permissions for a photo.\n<p><strong>Arguments</strong>\n"],["setPerms","FlickRaw::Flickr::Photos::Geo","FlickRaw/Flickr/Photos/Geo.html#method-i-setPerms","(:is_public => 'is_public',:is_contact => 'is_contact',:is_friend => 'is_friend',:is_family => 'is_family',:photo_id => 'photo_id')","<p>flickr.photos.geo.setPerms request.\n<p>Set the permission for who may view the geo data associated with a …\n"],["setPrimaryPhoto","FlickRaw::Flickr::Photosets","FlickRaw/Flickr/Photosets.html#method-i-setPrimaryPhoto","(:photoset_id => 'photoset_id',:photo_id => 'photo_id')","<p>flickr.photosets.setPrimaryPhoto request.\n<p>Set photoset primary photo\n<p><strong>Arguments</strong>\n"],["setSafetyLevel","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setSafetyLevel","(:photo_id => 'photo_id',:safety_level => 'safety_level',:hidden => 'hidden')","<p>flickr.photos.setSafetyLevel request.\n<p>Set the safety level of a photo.\n<p><strong>Arguments</strong>\n"],["setTags","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-setTags","(:photo_id => 'photo_id',:tags => 'tags')","<p>flickr.photos.setTags request.\n<p>Set the tags for a photo.\n<p><strong>Arguments</strong>\n"],["stats","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-stats","","<p>Returns a Stats object.\n"],["subscribe","FlickRaw::Flickr::Push","FlickRaw/Flickr/Push.html#method-i-subscribe","(:topic => 'topic',:callback => 'callback',:verify => 'verify',:verify_token => 'verify_token',:lease_seconds => 'lease_seconds',:woe_ids => 'woe_ids',:place_ids => 'place_ids',:lat => 'lat',:lon => 'lon',:radius => 'radius',:radius_units => 'radius_units',:accuracy => 'accuracy',:nsids => 'nsids',:tags => 'tags',:machine_tags => 'machine_tags',:update_type => 'update_type',:output_format => 'output_format',:mailto => 'mailto')","<p>flickr.push.subscribe request.\n<p>In ur pandas, tickling ur unicorn (this method is experimental and may …\n"],["suggestLocation","FlickRaw::Flickr::Photos::Suggestions","FlickRaw/Flickr/Photos/Suggestions.html#method-i-suggestLocation","(:photo_id => 'photo_id',:lat => 'lat',:lon => 'lon',:accuracy => 'accuracy',:woe_id => 'woe_id',:place_id => 'place_id',:note => 'note')","<p>flickr.photos.suggestions.suggestLocation request.\n<p>Suggest a geotagged location for a photo.\n<p><strong>Arguments</strong> …\n"],["suggestions","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-suggestions","","<p>Returns a Suggestions object.\n"],["tags","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-tags","","<p>Returns a Tags object.\n"],["tagsForPlace","FlickRaw::Flickr::Places","FlickRaw/Flickr/Places.html#method-i-tagsForPlace","(:woe_id => 'woe_id',:place_id => 'place_id',:min_upload_date => 'min_upload_date',:max_upload_date => 'max_upload_date',:min_taken_date => 'min_taken_date',:max_taken_date => 'max_taken_date')","<p>flickr.places.tagsForPlace request.\n<p>Return a list of the top 100 unique tags for a Flickr Places or Where …\n"],["test","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-test","","<p>Returns a Test object.\n"],["topics","FlickRaw::Flickr::Groups::Discuss","FlickRaw/Flickr/Groups/Discuss.html#method-i-topics","","<p>Returns a Topics object.\n"],["transform","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-transform","","<p>Returns a Transform object.\n"],["unsubscribe","FlickRaw::Flickr::Push","FlickRaw/Flickr/Push.html#method-i-unsubscribe","(:topic => 'topic',:callback => 'callback',:verify => 'verify',:verify_token => 'verify_token')","<p>flickr.push.unsubscribe request.\n<p>Why would you want to do this? (this method is experimental and may change)\n…\n"],["upload","FlickRaw::Flickr::Photos","FlickRaw/Flickr/Photos.html#method-i-upload","","<p>Returns a Upload object.\n"],["urls","FlickRaw::Flickr","FlickRaw/Flickr.html#method-i-urls","","<p>Returns a Urls object.\n"],["userComments","FlickRaw::Flickr::Activity","FlickRaw/Flickr/Activity.html#method-i-userComments","(:per_page => 'per_page',:page => 'page')","<p>flickr.activity.userComments request.\n<p>Returns a list of recent activity on photos commented on by the …\n"],["userPhotos","FlickRaw::Flickr::Activity","FlickRaw/Flickr/Activity.html#method-i-userPhotos","(:timeframe => 'timeframe',:per_page => 'per_page',:page => 'page')","<p>flickr.activity.userPhotos request.\n<p>Returns a list of recent activity on photos belonging to the calling …\n"],["README","","README_rdoc.html","","<p>Flickraw\n<p>Flickraw is a library to access flickr api in a simple way. It maps exactly\nthe methods described …\n"]]}}